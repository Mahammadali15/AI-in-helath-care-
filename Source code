#include <iostream>
#include <string>
#include <vector>
#include <unordered_map>

using namespace std;

// Define a struct to hold disease information
struct Disease {
    string name;
    unordered_map<string, bool> symptoms;
};

// Define a function to diagnose a disease based on symptoms
string diagnoseDisease(vector<string> patientSymptoms, vector<Disease> diseases) {
    for (Disease d : diseases) {
        bool isMatch = true;
        for (string s : patientSymptoms) {
            if (!d.symptoms[s]) {
                isMatch = false;
                break;
            }
        }
        if (isMatch) {
            return d.name;
        }
    }
    return "unknown";
}

int main() {
    // Define some example diseases and their symptoms
    Disease flu = {"Flu", {{"fever", true}, {"cough", true}, {"body aches", true}}};
    Disease cold = {"Cold", {{"runny nose", true}, {"sore throat", true}, {"cough", true}}};
    Disease pneumonia = {"Pneumonia", {{"fever", true}, {"cough", true}, {"shortness of breath", true}}};
    vector<Disease> diseases = {flu, cold, pneumonia};

    // Ask the patient for their symptoms
    vector<string> patientSymptoms;
    string symptom;
    cout << "Enter your symptoms (type 'done' when finished):" << endl;
    while (true) {
        cin >> symptom;
        if (symptom == "done") {
            break;
        }
        patientSymptoms.push_back(symptom);
    }

    // Diagnose the patient's disease
    string diagnosis = diagnoseDisease(patientSymptoms, diseases);
    if (diagnosis == "unknown") {
        cout << "Sorry, we could not diagnose your disease." << endl;
    } else {
        cout << "You have been diagnosed with " << diagnosis << "." << endl;
    }

    return 0;
}
